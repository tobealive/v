name: CI Windows (TCC)

on:
  workflow_call:

env:
  VFLAGS: -cc tcc -no-retry-compilation
  VERBOSE_MAKE: 1
  CACHE_ID: windows-tcc-${{ github.sha }}

jobs:
  build:
    runs-on: windows-2019
    if: github.event_name != 'push' || github.event.ref == 'refs/heads/master' || github.event.repository.full_name != 'vlang/v'
    timeout-minutes: 120
    env:
      VJOBS: 1
      VTEST_SHOW_START: 1
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: .\make.bat -tcc
      - name: Test new v.c
        run: |
          ./v -o v.c cmd/v
          .\thirdparty\tcc\tcc.exe -Werror -w -ladvapi32 -bt10 v.c
      - name: V doctor
        run: ./v doctor
      - name: Cache
        uses: actions/cache/save@v3
        with:
          path: ./
          key: ${{ env.CACHE_ID }}

  verify:
    needs: build
    runs-on: windows-2019
    steps:
      - name: Restore cache
        uses: actions/cache/restore@v3
        with:
          path: ./
          key: ${{ env.CACHE_ID }}
          fail-on-cache-miss: true
      - name: Verify `v test` works
        run: |
          ./v cmd/tools/test_if_v_test_system_works.v
          ./cmd/tools/test_if_v_test_system_works.exe
      - name: Verify `v vlib/v/gen/c/coutput_test.v` works
        run: .\v.exe vlib/v/gen/c/coutput_test.v
      - name: Make sure running TCC64 instead of TCC32
        run: ./v test .github\workflows\make_sure_ci_run_with_64bit_compiler_test.v
      - name: Test ./v doc -v clipboard (BEFORE building tools)
        run: ./v doc -v clipboard
      - name: Test v build-tools
        run: ./v -W build-tools
      - name: Verify `v test` works
        run: |
          ./v cmd/tools/test_if_v_test_system_works.v
          ./cmd/tools/test_if_v_test_system_works.exe
      - name: Test pure V math module
        run: ./v -exclude @vlib/math/*.c.v test vlib/math/

  fmt:
    needs: build
    runs-on: windows-2019
    steps:
      - name: Restore cache
        uses: actions/cache/restore@v3
        with:
          path: ./
          key: ${{ env.CACHE_ID }}
          fail-on-cache-miss: true
      - name: Test cleancode
        run: ./v test-cleancode

  test:
    needs: [verify, fmt]
    runs-on: windows-2019
    steps:
      - name: Restore cache
        uses: actions/cache/restore@v3
        with:
          path: ./
          key: ${{ env.CACHE_ID }}
          fail-on-cache-miss: true
      - name: Self tests
        run: ./v test-self

  build-modules:
    needs: [verify, fmt]
    runs-on: windows-2019
    steps:
      - name: Restore cache
        uses: actions/cache/restore@v3
        with:
          path: ./
          key: ${{ env.CACHE_ID }}
          fail-on-cache-miss: true
      - name: Install dependencies
        run: |
          ./v setup-freetype
          ./.github/workflows/windows-install-sqlite.bat
      - name: Test v->js
        run: ./v -o hi.js examples/hello_v_js.v && node hi.js
      - name: Test v binaries
        run: ./v build-vbinaries
      - name: Build examples
        run: ./v build-examples
      - name: v2 self compilation
        run: ./v -o v2.exe cmd/v && ./v2 -o v3.exe cmd/v && ./v3 -o v4.exe cmd/v
      - name: v2 self compilation with -gc boehm
        run: ./v -o v2.exe -gc boehm cmd/v && ./v2 -o v3.exe -gc boehm cmd/v && ./v3 -o v4.exe -gc boehm cmd/v

  # tcc32:
  #   runs-on: windows-2019
  #   steps:
  #     - name: Build with make.bat -tcc32
  #       run: |
  #         Remove-Item -Recurse -Force .\thirdparty\tcc
  #         .\v.exe wipe-cache
  #         .\make.bat -tcc32
  #     - name: Test new v.c
  #       run: .\v.exe -o v.c cmd/v && .\thirdparty\tcc\tcc.exe -Werror -g -w -ladvapi32 -bt10 v.c
  #     - name: V doctor
  #       run: ./v doctor
  #     - name: Verify `v test` works
  #       run: |
  #         .\v.exe cmd/tools/test_if_v_test_system_works.v
  #         .\cmd\tools\test_if_v_test_system_works.exe
  #     - name: Verify `v vlib/v/gen/c/coutput_test.v` works
  #       run: .\v.exe vlib/v/gen/c/coutput_test.v
  #     - name: Make sure running TCC32 instead of TCC64
  #       run: ./v -stats .github\workflows\make_sure_ci_run_with_32bit_compiler_test.v
  #     - name: Test v build-tools
  #       run: ./v -W build-tools
  #     - name: Test ./v doc clipboard
  #       run: ./v doc clipboard
  #     - name: Self tests
  #       run: ./v test-self
  #     - name: Test v->js
  #       run: ./v -o hi.js examples/hello_v_js.v && node hi.js
  #     - name: Test v binaries
  #       run: ./v build-vbinaries
  #     - name: Build examples
  #       run: ./v build-examples
  #     - name: v2 self compilation
  #       run: .\v.exe -o v2.exe cmd/v && .\v2.exe -o v3.exe cmd/v

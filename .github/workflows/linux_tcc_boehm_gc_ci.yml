name: CI Linux (TCC Boehm GC)

on:
  workflow_call:

env:
  VFLAGS: -cc tcc -no-retry-compilation
  CACHE_ID: linux-tcc-boehm-gc-${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event_name != 'push' || github.event.ref == 'refs/heads/master' || github.event.repository.full_name != 'vlang/v'
    steps:
      - uses: actions/checkout@v4
      - name: Setup dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libssl-dev sqlite3 libsqlite3-dev valgrind libfreetype6-dev libxi-dev libxcursor-dev libgl-dev libgc-dev
          version: 1.0
      - name: Build V
        run: |
          make -j4
          thirdparty/tcc/tcc.exe -version
          ./v -showcc -cg -o v cmd/v # Make sure vtcc can build itself twice
      - name: Self compile with -gc boehm
        run: |
          ./v -gc boehm -o v2 cmd/v && ./v2 -gc boehm -o v3 cmd/v && ./v3 -gc boehm -o v4 cmd/v
          mv v4 v
      - name: V doctor
        run: ./v doctor
      - name: Cache
        uses: actions/cache/save@v3
        with:
          path: ./
          key: ${{ env.CACHE_ID }}

  verify:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Restore cache
        uses: actions/cache/restore@v3
        with:
          path: ./
          key: ${{ env.CACHE_ID }}
          fail-on-cache-miss: true
      - name: Verify `v -gc boehm test` works
        run: |
          ./v -gc boehm cmd/tools/test_if_v_test_system_works.v
          ./cmd/tools/test_if_v_test_system_works
      - name: Test pure V math module
        run: ./v -exclude @vlib/math/*.c.v test vlib/math/

  fmt:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Restore cache
        uses: actions/cache/restore@v3
        with:
          path: ./
          key: ${{ env.CACHE_ID }}
          fail-on-cache-miss: true
      - name: Test fmt
        run: ./v test-fmt
      - name: Test cleancode
        run: ./v test-cleancode

  test:
    needs: verify
    runs-on: ubuntu-20.04
    timeout-minutes: 90
    steps:
      - name: Restore cache
        uses: actions/cache/restore@v3
        with:
          path: ./
          key: ${{ env.CACHE_ID }}
          fail-on-cache-miss: true
      - name: Setup dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libssl-dev sqlite3 libsqlite3-dev valgrind libfreetype6-dev libxi-dev libxcursor-dev libgl-dev expect
          version: 1.0
      - name: Self test with `-gc boehm` with V binary compiled with `-gc boehm`
        run: ./v -gc boehm test-self
      - name: Test leak detector
        run: |
          ./v -gc boehm_leak -o testcase_leak vlib/v/tests/testcase_leak.vv
          ./testcase_leak 2>leaks.txt
          grep "Found 1 leaked object" leaks.txt && grep -P ", sz=\s?1000," leaks.txt
      - name: Test leak detector not being active for `-gc boehm`
        run: |
          ./v -gc boehm -o testcase_leak vlib/v/tests/testcase_leak.vv
          ./testcase_leak 2>leaks.txt
          [ "$(stat -c %s leaks.txt)" = "0" ]
      - name: Test leak detector not being active for normal compile
        run: |
          ./v -o testcase_leak vlib/v/tests/testcase_leak.vv
          ./testcase_leak 2>leaks.txt
          [ "$(stat -c %s leaks.txt)" = "0" ]

  build-modules:
    needs: verify
    runs-on: ubuntu-20.04
    steps:
      - name: Restore cache
        uses: actions/cache/restore@v3
        with:
          path: ./
          key: ${{ env.CACHE_ID }}
          fail-on-cache-miss: true
      - name: Setup dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libssl-dev sqlite3 libsqlite3-dev valgrind libfreetype6-dev libxi-dev libxcursor-dev libgl-dev expect
          version: 1.0
      - name: Build Examples
        run: ./v build-examples
